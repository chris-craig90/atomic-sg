{"version":3,"sources":["../assets/scripts/styleguide/baselinegrid.js","../assets/scripts/styleguide/horizontalgrid.js","../assets/scripts/styleguide/sc5-template.js","../assets/scripts/styleguide/styleguide.js"],"names":["global","$","BaselineGrid","selector","init","css","gridWrap","toggleClass","prototype","clean","callback","this","slector","find","length","remove","create","self","each","append","toggle","$BLGRD","window","jQuery","HorzGrid","gridHtml","console","log","$HGRD","SC5Layout","environment","location","href","indexOf","sideNav","wrap","prepend","addClass","removeClass","detach","prependTo","off","on","mainContent","appendTo","placeholder","imageobj","attr","Math","random","demo","swapImage","imgNos","src","imgPath","split","fileName","fileNameTrim","substring","randImgNo","floor","splice","randImg","inlneStyle","join","imgSets","currentSet","nextSet","gridControls","document","$SC5","ready","setTimeout","sc5Template","baselineGrid","horGrid"],"mappings":"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","file":"styleguide.js","sourcesContent":["/**\n * @file baselineGrid.js\n * @author Christopher Craig\n * @version 0.2\n */\n\n/**\n * Library for creating a baseline grid overlay\n * @namespace baselineGrid\n * @example\n * // Create and then store a refrence to our baseline grid object so we can access the toggle methods on its prototype\n * var baselineGrid = $BLGRD('.show-baseline').create();\n *\n * // Create a click event and fire $BLGRD.toggle() method to show/hide the baseline grid overlay\n * $(document).on('click', '#baselineGrid_overlay_btn', function() {\n *   $(this).toggleClass('m-LinkGrp--toggleGroup__link--focus');\n *   baselineGrid.toggle();\n * });\n */\n\n/**\n *\n * @name IIFE\n * @namespace\n * @memberof baselineGrid\n * @param {object} global - Global window object\n * @param {object} $ - jQuery object\n * @example\n * ;(function(global, $){\n *    // code goes here....\n * }(window, jQuery));\n */\n;(function(global, $) {\n\n  // ### 'new' an object\n  var BaselineGrid = function(selector) {\n    // The BaselineGrid object is actually just the init constructor 'enhanced'\n    // **this concept is taken from jQuery**\n    return new BaselineGrid.init(selector);\n  };\n\n  // ## Hidden properties and function\n  // Hidden the scope of the IIFE and never directly accessible\n\n  var css = {\n    gridWrap : '.js-baseLineOverlay',\n    toggleClass : 'js-baseLineOverlay--show',\n  };\n\n  // Attach method to prototype object (to save memory space!)\n  BaselineGrid.prototype = {\n\n    /**\n     * @function clean\n     * @memberof baselineGrid\n     * @description Removes baseline classes and elements if baselineGrid has allready been called on elements that match 'this.selector'\n     * @param {function} callback - a callback function to be ran after clean has finnsihed\n     * @example\n     * $BLGRD('.selector').clean(); // External\n     * this.clean(); // Internal, invoked by sibling prtototype method\n     */\n    clean : function(callback) {\n\n      // Check if elemnt already has any baselineGrid classes\n      // If it does, then we can asume $BL().create has already been invoked on this element, so we can clean it.\n      if($(this.slector).find(css.gridWrap).length !== 0) {\n        $(this.selector).find(css.gridWrap).remove();\n      }\n\n      // Invoke callbak, if supplied\n      if (callback && typeof callback === 'function') {\n        // Pass the 'this' variable so the cb can refrence the baselineGrid oject\n        callback(this);\n      }\n      return this; // *chainable method*\n    },\n\n    /**\n     * @function create\n     * @memberof baselineGrid\n     * @description Creates a new baselineGrid element and add it to self.selector\n     * @example\n     * $BLGRD('.selector').create();\n     */\n    create : function() {\n      this.clean(function(self) {\n        // The .clean method passes its 'this' variable to the cb. Giving us a refrence to the object construcuted with BaselineGrid.init().\n        // Use the 'self' var instead of 'this'. The 'this' var, insdie the cb, will point to the global object.\n        $(self.selector).each(function() {\n          $(this).append('<div class=\"js-baseLineOverlay\"></div>');\n        });\n      });\n\n      return this; // *chainable method*\n    },\n\n    /**\n     * @function toggle\n     * @memberof baselineGrid\n     * @description Toggles the BaselineGrid.showBaselineClass on all elements that match self.selectior.\n     * @example\n     * // create and toggle 'show' class immediantley.\n     * $BLGRD('.selector').create().toggle();\n     *\n     * // Create and store refrence to baselineGrid object (var bl), and then invoke it later (this could be attached to a click event for example).\n     * var bl = $BL('.selector').create();\n     * $('#button').on('click', bl.toggle);\n     */\n    toggle : function() {\n      $(this.selector).find(css.gridWrap).toggleClass(css.toggleClass);\n      return this; // *chainable method*\n    }\n\n  };\n\n  // The actual object is created here, allowing us to 'new' an object without calling 'new'\n  BaselineGrid.init = function(selector) {\n      var self = this;\n      self.selector = selector || '';\n  };\n\n  // Trick borrowed from jQuery so we don't have to use the 'new' keyword\n  BaselineGrid.init.prototype = BaselineGrid.prototype;\n\n  // Attach our BaselineGrid to the global object, and provide a shorthand '$G' to ease our poor fingers\n  global.BaselineGrid = global.$BLGRD = BaselineGrid;\n\n}(window, jQuery));\n","/**\n * @file horizontalGrid.js\n * @author Christopher Craig\n * @version 0.2\n */\n\n/**\n * Library for creating a horizontal grid overlay\n * @namespace horizontalGrid\n * @example\n * // Create and then store a refrence to our baseline grid object so we can access the toggle methods on its prototype\n * var baselineGrid = $HGRD('.show-baseline').create();\n *\n * // Create a click event and fire $HGRD.toggle() method to show/hide the baseline grid overlay\n * $(document).on('click', '#baselineGrid_overlay_btn', function() {\n *   $(this).toggleClass('m-LinkGrp--toggleGroup__link--focus');\n *   baselineGrid.toggle();\n * });\n */\n\n/**\n *\n * @name IIFE\n * @namespace\n * @memberof horizontalGrid\n * @param {object} global - Global window object\n * @param {object} $ - jQuery object\n * @example\n * ;(function(global, $){\n *    // code goes here....\n * }(window, jQuery));\n */\n;(function(global, $) {\n\n  // ### 'new' an object\n  var HorzGrid = function(selector) {\n    // The HorzGrid object is actually just the init constructor 'enhanced'\n    // **this concept is taken from jQuery**\n    return new HorzGrid.init(selector);\n  };\n\n  // ## Hidden properties and function\n  // Hidden the scope of the IIFE and never directly accessible\n\n  var css = {\n    gridWrap : 'js-horGridOverlay',\n    toggleClass : 'js-horGridOverlay--show',\n  };\n\n  // Grid overlay HTML structure\n  var gridHtml =\n    '<div class=\"' + css.gridWrap + '\">' +\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>' +\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>'+\n     '  <div class=\"js-horGridOverlay__col\">' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--left\"></div>' +\n     '    <div class=\"js-horGridOverlay__col__gutter js-horGridOverlay__col__gutter--right\"></div>' +\n     '  </div>' +\n    '</div>' +\n  '';\n\n  // Attach method to prototype object (to save memory space!)\n  HorzGrid.prototype = {\n\n    /**\n     * @function clean\n     * @memberof horizontalGrid\n     * @description Removes baseline classes and elements if baselineGrid has allready been called on elements that match 'this.selector'\n     * @param {function} callback - a callback function to be ran after clean has finnsihed\n     * @example\n     * $HGRD('.selector').clean(); // External\n     * this.clean(); // Internal, invoked by sibling prtototype method\n     */\n    clean : function(callback) {\n\n      // Check if elemnt already has any baselineGrid classes\n      // If it does, then we can asume $HGRD().create has already been invoked on this element, so we can clean it.\n      if ($(this.slector).find(css.gridWrap).length !== 0) {\n        $(this.selector).find(css.gridWrap).remove();\n      }\n\n      // Invoke callbak, if supplied\n      if (callback && typeof callback === 'function') {\n        // Pass the 'this' variable so the cb can refrence the baselineGrid oject\n        callback(this);\n      }\n      return this; // *chainable method*\n    },\n\n    /**\n     * @function create\n     * @memberof horizontalGrid\n     * @description Creates a new baselineGrid element and add it to self.selector\n     * @example\n     * $HGRD('.selector').create();\n     */\n    create : function() {\n      this.clean(function(self) {\n        // The .clean method passes its 'this' variable to the cb. Giving us a refrence to the object construcuted with HorzGrid.init().\n        // Use the 'self' var instead of 'this'. The 'this' var, insdie the cb, will point to the global object.\n        $(self.selector).each(function() {\n          // Insert horz grid html in to grid container\n          $(this).append(gridHtml);\n        });\n      });\n\n      return this; // *chainable method*\n    },\n\n    /**\n     * @function toggle\n     * @memberof horizontalGrid\n     * @description Toggles the HorzGrid.showBaselineClass on all elements that match self.selectior.\n     * @example\n     * // create and toggle 'show' class immediantley.\n     * $HGRD('.selector').create().toggle();\n     *\n     * // Create and store refrence to baselineGrid object (var bl), and then invoke it later (this could be attached to a click event for example).\n     * var bl = $HGRD('.selector').create();\n     * $('#button').on('click', bl.toggle);\n     */\n    toggle : function() {\n      console.log(css.gridWrap);\n      $('.' + css.gridWrap).toggleClass(css.toggleClass);\n      return this; // *chainable method*\n    }\n\n  };\n\n  // The actual object is created here, allowing us to 'new' an object without calling 'new'\n  HorzGrid.init = function(selector) {\n      var self = this;\n      self.selector = selector || '';\n  };\n\n  // Trick borrowed from jQuery so we don't have to use the 'new' keyword\n  HorzGrid.init.prototype = HorzGrid.prototype;\n\n  // Attach our HorzGrid to the global object, and provide a shorthand '$G' to ease our poor fingers\n  global.HorzGrid = global.$HGRD = HorzGrid;\n\n}(window, jQuery));\n","/**\n * @file sc5Layout.js\n * @author Christopher Craig\n * @version 0.2\n */\n\n/**\n * Library for creating a baseline grid overlay\n * @namespace sc5Layout\n * @example\n * // Create and then store a refrence to our baseline grid object so we can access the toggle methods on its prototype\n * var sc5Layout = $SC5('.show-baseline').create();\n *\n * // Create a click event and fire $SC5.toggle() method to show/hide the baseline grid overlay\n * $(document).on('click', '#sc5Layout_overlay_btn', function() {\n *   $(this).toggleClass('m-LinkGrp--toggleGroup__link--focus');\n *   sc5Layout.toggle();\n * });\n */\n\n;(function(global, $) {\n\n  // ### 'new' an object\n  var SC5Layout = function(selector) {\n    // The SC5Layout object is actually just the init constructor 'enhanced'\n    // **this concept is taken from jQuery**\n    return new SC5Layout.init(selector);\n  };\n\n  // ## Hidden properties and function\n  // Hidden the scope of the IIFE and never directly accessible\n  // var test = 'val';\n\n  // Attach method to prototype object (to save memory space!)\n\n  /**\n   * @function environment\n   * @memberof sc5Layout\n   * @description Checks if we are in the SC% full screen view or the styleguide. If in style guide, it returns true. Internal use only.\n   * @private\n   * @example\n   * SC5().environment(); // => true/ false\n   */\n  SC5Layout.prototype.environment = function() {\n    if(window.location.href.indexOf(\"fullscreen\") === -1) {\n      return true;\n    }\n  };\n\n  /**\n   * @function sidenav\n   * @memberof sc5Layout\n   * @description Wraps sc5 side nav and amedns defualt styles\n   * @example\n   * var sc5Template = $SC5();\n   * sc5Template.sideNav\n   */\n  SC5Layout.prototype.sideNav = function() {\n     if( this.environment() ){\n       // Wrap side nav parent\n       $('.sg-side-nav').wrap('<div class=\"base__sidenav base__sidenav--left base__sidenav--persistent base__sidenav--open js-gridOverlay--bl u-bg--prime\"></div>');\n\n       // Remove default toggle controll\n       $('.sg.side-nav-toggle').remove();\n\n       // Add side nav header\n       $('.base__sidenav').prepend('' +\n       '<div class=\"base__sidenav__appBar\">' +\n         '<div class=\"base__sidenav__logo u-hide--desktop\">' +\n             '<a href=\"\" title=\"Home\"><sg-insert>1.5.2</sg-insert></a>' +\n         '</div>' +\n       '<button class=\"base__sidenav__close u-hide--desktop a-icon base__sidenav__openLeft\"><i class=\"a-icon a-icon--reg\">close</i></button>' +\n       '</div>' +\n       '<header class=\"base__sidenav__title\">' +\n           '<h1>Interface guidelines</h1>' +\n           '<p class=\"meta\">Version 1.0</p>' +\n       '</header>');\n\n\n       // Place sg-side-nav inside the main content area of '.base__sidenav'\n       $('.sg-side-nav').wrap('<div class=\"base__sidenav__main\"></div>'); // Side bar sc5 navigation\n\n       // Sub Nav Styles\n       $('.sg-side-nav').addClass('m-nav-vert--title u-txt-hilgt');\n       $('.sg-side-nav > ul > li a').addClass('u-txt-prime');\n       $('.sg-side-nav > ul > li > a').removeClass('u-bg').addClass('u-bg');\n\n       // Move Navigation to sit inside the newly creates '.base__sidenav__main'\n       $('.sg-side-nav .m-nav-vert').detach().prependTo('.base__sidenav__main');\n       $('.base__sidenav').detach().prependTo('.base');\n\n       // CLose Side nav event handler\n       $('.base__sidenav__openLeft').off().on('click', function(){\n         console.log('click');\n         $('.base__sidenav--left').toggleClass('base__sidenav--open');\n       });\n\n     }\n     return this; // *chainable method*\n  };\n\n  /**\n   * @function mainContent\n   * @memberof sc5Layout\n   * @description Sets up main content area\n   * @example\n   * var sc5Template = $SC5();\n   * sc5Template.mainContent\n   */\n  SC5Layout.prototype.mainContent = function(){\n    if( this.environment() ){\n      $('body').prepend('<div class=\"base base--shadow\"></div>');\n      $('.view-index').detach().appendTo('.base').addClass('base__main');\n\n      $('.base__main > .ng-scope').addClass('base__canvas');\n      $('.base__canvas > .full-height').addClass('t-doc');\n\n      $('.base__main').prepend('' +\n      '<div class=\"base__appBar u-bg--prime js-gridOverlay--bl u-hide--desktop\">' +\n          '<nav class=\"o-toolbar\">' +\n              '<div class=\"o-toolbar_sect--lft u-Grid-col-12\">' +\n                  '<nav class=\"m-nav-hor\">' +\n                     '<ul class=\"m-nav-hor__list\">' +\n                         '<li class=\"m-nav-hor__list__item\">' +\n                             '<button class=\"m-nav-hor__list__item__link a-icon base__sidenav__openLeft\">&#xE5D2;</button>' +\n                         '</li>' +\n                     '</ul>' +\n                 '</nav>' +\n             '</div>' +\n         '</nav>' +\n      '</div>');\n\n      //$('.sg-body').addClass('t-doc__page');\n      //$('.t-doc__page').wrap('<div class=\"t-doc\"></div>');\n      //$('.t-doc').wrap('<div class=\"base__canvas\"></div>');\n\n    }\n    return this; // *chainable method*\n  };\n\n  /**\n   * @function placeholder\n   * @memberof sc5Layout\n   * @description Refrshes the src attr of placeholder images, this insures a ramdom image is retrunred from the api\n   * @example\n   * var sc5Template = $SC5();\n   * sc5Template.placeholder\n   */\n  SC5Layout.prototype.placeholder = function(){\n    $('*').each(function(){\n        var imageobj = this;\n        $(imageobj).attr('src', $(imageobj).attr('src') + '?' + Math.random() ).attr('srcset', '');\n    });\n    return this; // *chainable method*\n  };\n\n  /**\n   * @function placeholder\n   * @memberof sc5Layout\n   * @description Refrshes the src attr of placeholder images, this insures a ramdom image is retrunred from the api\n   * @example\n   * var sc5Template = $SC5();\n   * sc5Template.placeholder\n   */\n  SC5Layout.prototype.demo = function(){\n\n    // Image collections\n    var imgSets = [ 'placeholder', 'bakery', 'bike' ];\n    var currentSet = 'placeholder';\n\n    // Click event\n    $('#sg-image-switch').on('click', function() {\n        var nextSet = ( imgSets.indexOf( currentSet ) + 1 < imgSets.length ) ? imgSets[imgSets.indexOf( currentSet ) + 1] : imgSets[0];\n        currentSet = nextSet;\n        swapImage(currentSet);\n    });\n\n    function swapImage(demo) {\n\n        var imgNos = [ '1', '2', '3', '4', '5', '6', '7', '8' ];\n        // Swap source img elments\n        $('img[src*=\"/demo/\"]').each(function(){\n            var src= $(this).attr('src');\n            var imgPath = src.split('/');\n\n            // Get Random image, range between 1 - 4\n            if ( imgNos.length === 0 ){\n                imgNos = [ '1', '2', '3', '4', '5', '6', '7', '8' ];\n            }\n            console.log(imgNos);\n            var fileName = imgPath[6].split('?');\n            var fileNameTrim = fileName[0].substring(0, fileName[0].length - 5);\n            var randImgNo = imgNos[Math.floor(Math.random()*imgNos.length)];\n            // Remove the random no from imgNos array so it doesnt get shown twice\n            imgNos.splice( imgNos.indexOf(randImgNo) , 1);\n            var randImg = fileNameTrim + randImgNo + '.jpg';\n\n\n            // If Logo just swap source\n            if ( imgPath[5] === 'logo' ){\n                console.log(imgPath);\n                imgPath[4] = demo;\n                console.log(imgPath);\n                $(this).attr('src', imgPath[0]+ '/' + imgPath[1]+ '/' + imgPath[2] + '/' + imgPath[3] + '/' + imgPath[4] + '/' + imgPath[5] + '/' + imgPath[6] );\n            }\n            else{\n                if (imgPath[0] === '') {\n                    imgPath.splice(0,1);\n                }\n                if ( demo && typeof demo === 'string' ){\n                    imgPath[3] = demo;\n                    imgPath[5] = randImg;\n                    $(this).attr('src', '/' + imgPath[0]+ '/' + imgPath[1]+ '/' + imgPath[2] + '/' + imgPath[3] + '/' + imgPath[4] + '/' + imgPath[5] );\n                }\n            }\n\n\n        });\n\n\n\n        // Swap css inline background-image url\n        $('*[style*=\"/demo/\"]').each(function(){\n            var inlneStyle= $(this).attr('style');\n            var imgPath = inlneStyle.split('/');\n\n            // Get Random image, range between 1 - 4\n            var fileName = imgPath[6].split(')');\n            var fileNameTrim = fileName[0].substring(0, fileName[0].length - 5);\n            var randImgNo = Math.floor(Math.random() * 8) + 1;\n            var randImg = fileNameTrim + randImgNo + '.jpg)' + fileName[1];\n\n            if (imgPath[0] === '') {\n                imgPath.splice(0,1);\n            }\n            if ( demo && typeof demo === 'string' ){\n                imgPath[4] = demo\n                imgPath[6] = randImg;\n                $(this).attr('style', imgPath.join('/') );\n            }\n        });\n    }\n\n    return this; // *chainable method*\n  };\n\n  /**\n   * @function gridControls\n   * @memberof sc5Layout\n   * @description Inserts ctrol buttons for grid overlay\n   * @example\n   * var sc5Template = $SC5();\n   * sc5Template.gridControls\n   */\n  SC5Layout.prototype.gridControls = function(){\n    \n      $('body').append(\n      '<div id=\"sg-controls\" class=\"sg-controls\">' +\n      ' <nav class=\" m-nav-tog u-shadow-l3\">' +\n      '   <ul class=\" m-nav-tog__list\">' +\n      '     <li class=\" m-nav-tog__list__item\">' +\n      '       <button class=\"m-nav-tog__link\" id=\"sg-image-switch\">' +\n      '          <i class=\"a-icon a-icon--sml\">image</i>' +\n      '       </button>' +\n      '     </li>' +\n      '     <li class=\" m-nav-tog__list__item\">' +\n      '       <button class=\"m-nav-tog__link\" id=\"mqSettings-btn\">' +\n      '          <i class=\"a-icon a-icon--sml\">devices_other</i>' +\n      '       </button>' +\n      '     </li>' +\n      '     <li class=\"m-nav-tog__list__item\">' +\n      '       <button class=\"m-nav-tog__link\" id=\"sg-gridOverlay--hor_btn\">' +\n      '          <i class=\"a-icon a-icon--sml\">line_style</i>' +\n      '       </button>' +\n      '     </li>' +\n      '     <li class=\"m-nav-tog__list__item\">' +\n      '       <button class=\"m-nav-tog__link\" id=\"baselineGrid_overlay_btn\">' +\n      '          <i class=\"a-icon a-icon--sml\">line_weight</i>' +\n      '       </button>' +\n      '     </li>' +\n      '  </ul>' +\n      ' </nav>' +\n      ' </div>' +\n      '');\n\n      // Media query toggle control event handler\n      $(document).on('click', '#mqSettings-btn', function(){\n        $(this).toggleClass('m-nav-tog__link--focus');\n        $('body').toggleClass('mqSettings--show');\n      });\n\n\n\n    return this; // *chainable method*\n  };\n\n  /**\n   * @function clean\n   * @memberof sc5Layout\n   * @description Removes deafault stylesheets\n   * @example\n   * var sc5Template = $SC5();\n   * sc5Template.mainContent\n   */\n  SC5Layout.prototype.clean = function() {\n    console.log('cleaning up ...');\n    // Remove Defualt css files\n    $('link[href=\"/styleguide-app.css\"]').remove();\n    $('link[href=\"/styleguide_helper_elements.css\"]').remove();\n\n    return this; // *chainable method*\n  };\n\n  // The actual object is created here, allowing us to 'new' an object without calling 'new'\n  SC5Layout.init = function(selector) {\n      var self = this;\n  };\n\n  // Trick borrowed from jQuery so we don't have to use the 'new' keyword\n  SC5Layout.init.prototype = SC5Layout.prototype;\n\n  // Attach our SC5Layout to the global object, and provide a shorthand '$SC5' to ease our poor fingers\n  global.SC5Layout = global.$SC5 = SC5Layout;\n\n}(window, jQuery));\n","// Custom SC5 stylewguide setup\n// ===================================\n\n$(document).ready(function() {\n  setTimeout(function () {\n\n      console.log('styleguidestart');\n\n    // # Template setup\n    // ==========================================\n    var sc5Template = $SC5();\n    sc5Template\n      //.clean()\n        .gridControls();\n        //   .mainContent()\n        //     .sideNav()\n        //       .placeholder()\n        //         .demo('temp');\n                //.demo('fashion-light-uni');\n\n    // # Grid Overlays\n    // ==========================================\n    // ## Baseline Grid overlay\n    // Create and then store a refrence to our baseline grid object so we can access the toggle methods on its prototype\n    var baselineGrid = $BLGRD('.js-gridOverlay--bl, .js-gridOverlay').create();\n    // Create a click event and fire BL$.toggle() method to show/hide the baseline grid overlay\n    $(document).on('click', '#baselineGrid_overlay_btn', function() {\n      $(this).toggleClass('m-LinkGrp--toggleGroup__link--focus');\n      baselineGrid.toggle();\n    });\n\n    // ## Horizontal Grid overlay\n    // Create and then store a refrence to our horizontal grid object so we can access the toggle methods on its prototype\n    var horGrid = $HGRD('.u-Grid-wrap, .js-gridOverlay').create();\n    // Create a click event and fire horGrid$.toggle() method to show/hide the baseline grid overlay\n    $(document).on('click', '#sg-gridOverlay--hor_btn', function() {\n      $(this).toggleClass('m-LinkGrp--toggleGroup__link--focus');\n      horGrid.toggle();\n    });\n\n  },3000);\n});\n"],"sourceRoot":"assets/scripts/"}